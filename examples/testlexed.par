define (a function) (called "foo") (that
    (defines (a variable) (called "x") that (starts with) (the value 5) then)
    defines a constant called "PI" that contains the value 3.14 then

    defines a variable called "sum" that (starts with) (the result of) adding "x" and "PI" then

    executes the function called "foo"
)

    defines a variable called "res" that starts with the result of
        adding the value of "x" and the value 5

<noun> ::= "function" | "variable"
<indefinite> ::= "a" <noun>
<definite> ::= "a" <noun>

<ident> ::= "\"[^"]*\""

<value-lit> ::= [0-9,]+ | [0-9]+(\.[0-9]+)?
<value> ::= "the" "value" <value-lit>

<statement> ::= <definition-clause> | <execute-clause>
<block-list> ::= <statement> "then" <block-list> | <statement>

<function-body> ::= <block-list>
<variable-init> ::= "starts" "with" <value> | "contains" <value>

<definition> ::= "define" <indefinite> "called" <ident> "that" (<function-body> | <variable-init>)
<definition-clause> ::= "defines" <indefinite> "called" <ident>  "that" (<function-body> | <variable-init>) 

<execute-clause> ::= "executes" <definite>

<definition-init> ::= "do" <function-body> | "that" <variable-init>

<binary-op> ::= "adding" | "subtracting" | "multiplying" | "dividing"
<unary-op> ::= "negating"
<operation> ::= <binary-op> <value-lit> "and" <value-lit> | <unary-op> <value-lit> 
