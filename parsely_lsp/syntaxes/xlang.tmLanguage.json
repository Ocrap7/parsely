{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "scopeName": "source.par",
    "patterns": [
        {
            "include": "#meta"
        },
        {
            "include": "#attribute"
        },
        {
            "include": "#keyword"
        },
        {
            "include": "#item"
        },
        {
            "include": "#literal"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#instruction-format"
        }
    ],
    "repository": {
        "meta": {
            "match": "<(function)>",
            "captures": {
                "1": {
                    "name": "keyword"
                }
            }
        },
        "attribute": {
            "begin": "#!\\s*\\[",
            "end": "\\]",
            "patterns": [
                {
                    "include": "#literal"
                }
            ]
        },
        "item": {
            "begin": "\\b(let)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\b",
            "beginCaptures": {
                "1": {
                    "name": "keyword"
                },
                "2": {
                    "name": "variable.name"
                }
            },
            "end": ";",
            "patterns": [
                {
                    "include": "#meta"
                },
                {
                    "include": "#instruction"
                },
                {
                    "include": "#literal"
                }
            ]
        },
        "literal": {
            "patterns": [
                {
                    "match": "\"([^\"]+)\"",
                    "captures": {
                        "0": {
                            "name": "string.quoted.double"
                        }
                    }
                },
                {
                    "match": "\\b\\d+",
                    "name": "constant.numeric"
                }
            ]
        },
        "instruction-format": {
            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
            "end": "(;|,|$\\n?)",
            "beginCaptures": {
                "1": {
                    "name": "keyword"
                }
            },
            "patterns": [
                {
                    "match": "\\b(reg|imm)\\s*:\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "captures": {
                        "1": {
                            "name": "entity.name.type"
                        },
                        "2": {
                            "name": "variable.name"
                        }
                    }
                }
            ]
        },
        "instruction": {
            "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
            "end": "(;|,|$\\n?)",
            "beginCaptures": {
                "1": {
                    "name": "keyword"
                }
            },
            "patterns": [
                {
                    "match": "\\b([A-Z_][A-Z0-9_]*)\\b",
                    "captures": {
                        "1": {
                            "name": "constant.other.caps"
                        }
                    }
                },
                {
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
                    "captures": {
                        "1": {
                            "name": "entity.name.type"
                        }
                    }
                },
                {
                    "include": "#literal"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "begin": "\\(\\*",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "end": "\\*\\)",
                    "name": "comment.block"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "match": "(///).*$\\n?",
                    "name": "comment.block.documentation"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment"
                        }
                    },
                    "match": "(//).*$\\n?",
                    "name": "comment.line.double-slash"
                }
            ]
        },
        "node_type": {
            "match": "^\\s*([A-Z_][A-Z_0-9]*?)@",
            "captures": {
                "1": {
                    "name": "entity.name.class"
                }
            }
        }
    }
}